---
project_name: netfilter-exporter
release:
  github:
    owner: ne-bknn
    name: netfilter-exporter
  draft: true
  replace_existing_draft: true
  replace_existing_artifacts: true
  prerelease: "auto"

upx:
  - enabled: true
    compress: "3"
    brute: false

gomod:
  proxy: true

checksum:
  name_template: 'checksums.txt'

source:
  enabled: true

signs:
  - cmd: cosign
    env:
      - COSIGN_EXPERIMENTAL=1
    certificate: '${artifact}.pem'
    args:
      - sign-blob
      - '--output-certificate=${certificate}'
      - '--output-signature=${signature}'
      - '${artifact}'
      - "--yes"  # needed on cosign 2.0.0+
    artifacts: checksum
    output: true

builds:
  - id: netfilter-exporter
    main: ./netfilter-exporter.go
    goos:
      - linux
    goarch:
      - amd64
      - arm64
    ldflags:
      - -s -w
      - -extldflags=-static
      - -X github.com/{{ .Env.GITHUB_REPOSITORY_OWNER}}/{{ .ProjectName }}/internal.BuildVersion={{ .Version }}
      - -X github.com/{{ .Env.GITHUB_REPOSITORY_OWNER}}/{{ .ProjectName }}/internal.BuildDate={{ .Date }}
      - -X github.com/{{ .Env.GITHUB_REPOSITORY_OWNER}}/{{ .ProjectName }}/internal.BuildHash={{ .Commit }}
      - -X github.com/{{ .Env.GITHUB_REPOSITORY_OWNER}}/{{ .ProjectName }}/internal.BuildEnvironment={{ .Env.GITHUB_ACTOR }}@{{ .Env.RUNNER_OS }}_{{ .Env.RUNNER_ARCH }}
    tags:
      - osusergo
      - netgo
    env:
      - CGO_ENABLED=0

archives:
  - format: tar.gz
    name_template: "{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}"

dockers:
  - &docker_template
    image_templates:
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/{{ .ProjectName }}:{{ .Tag }}-amd64"
    dockerfile: Dockerfile.goreleaser
    use: buildx
    skip_push: "auto"
    build_flag_templates:
      - "--pull"
      - "--platform=linux/amd64"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - "--label=org.opencontainers.image.source={{.GitURL}}"

  - <<: *docker_template
    image_templates:
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/{{ .ProjectName }}:{{ .Tag }}-arm64"
    build_flag_templates:
      - "--pull"
      - "--platform=linux/arm64"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - "--label=org.opencontainers.image.source={{.GitURL}}"

  - <<: *docker_template
    dockerfile: Dockerfile.goreleaser-debug
    image_templates:
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/{{ .ProjectName }}:{{ .Tag }}-amd64-debug"
    build_flag_templates:
      - "--pull"
      - "--platform=linux/amd64"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - "--label=org.opencontainers.image.source={{.GitURL}}"

  - <<: *docker_template
    dockerfile: Dockerfile.goreleaser-debug
    image_templates:
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/{{ .ProjectName }}:{{ .Tag }}-arm64-debug"
    build_flag_templates:
      - "--pull"
      - "--platform=linux/arm64"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - "--label=org.opencontainers.image.source={{.GitURL}}"

docker_manifests:
  - name_template: "ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/{{ .ProjectName }}:{{ .Tag }}"
    image_templates:
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/{{ .ProjectName }}:{{ .Tag }}-amd64"
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/{{ .ProjectName }}:{{ .Tag }}-arm64"

  - name_template: "ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/{{ .ProjectName }}:{{ .Tag }}-debug"
    image_templates:
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/{{ .ProjectName }}:{{ .Tag }}-amd64-debug"
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/{{ .ProjectName }}:{{ .Tag }}-arm64-debug"

docker_signs:
  - cmd: cosign
    env:
      - COSIGN_EXPERIMENTAL=1
    artifacts: all
    output: true
    args:
      - 'sign'
      - '${artifact}'
      - "--yes"  # needed on cosign 2.0.0+

